<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gráfico en Tiempo Real de Datos del Sensor</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom"></script>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            background-color: #1E1E2C;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #chartContainer {
            width: 100vw;
            height: 100vh;
        }

        canvas {
            display: block;
            width: 100%;
            height: 100%;
        }

        h1 {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            color: #FFFFFF;
            font-family: Arial, sans-serif;
            font-size: 24px;
            z-index: 10;
        }
    </style>
</head>
<body>

    <h1>Gráfico de Datos del Sensor en Tiempo Real</h1>

    <div id="chartContainer">
        <canvas id="sensorChart"></canvas>
    </div>

    <script>
        let sensorChart; 

        function fetchAndUpdateData() {
            fetch('/sensor/data')
                .then(response => response.json())
                .then(data => {
                    // Procesar los datos recibidos
                    const timestamps = data.map(item => new Date(item.timestamp).toLocaleTimeString());
                    const pm25 = data.map(item => item.pm25_standard || 0);
                    const pm10 = data.map(item => item.pm10_standard || 0);
                    const pm100 = data.map(item => item.pm100_standard || 0);

                    // Si el gráfico ya existe, actualizamos los datos
                    if (sensorChart) {
                        sensorChart.data.labels = timestamps;
                        sensorChart.data.datasets[0].data = pm25;
                        sensorChart.data.datasets[1].data = pm10;
                        sensorChart.data.datasets[2].data = pm100;
                        sensorChart.update(); 
                    } else {
                        // Si no existe, creamos el gráfico
                        const ctx = document.getElementById('sensorChart').getContext('2d');
                        sensorChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: timestamps,
                                datasets: [
                                    {
                                        label: 'PM2.5',
                                        data: pm25,
                                        borderColor: 'rgba(255, 99, 132, 1)',
                                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                        borderWidth: 2,
                                        fill: true
                                    },
                                    {
                                        label: 'PM10',
                                        data: pm10,
                                        borderColor: 'rgba(54, 162, 235, 1)',
                                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                        borderWidth: 2,
                                        fill: true
                                    },
                                    {
                                        label: 'PM100',
                                        data: pm100,
                                        borderColor: 'rgba(75, 192, 192, 1)',
                                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                        borderWidth: 2,
                                        fill: true
                                    }
                                ]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                scales: {
                                    x: {
                                        title: {
                                            display: true,
                                            text: 'Tiempo',
                                            color: '#FFFFFF'
                                        },
                                        ticks: {
                                            color: '#FFFFFF'
                                        }
                                    },
                                    y: {
                                        title: {
                                            display: true,
                                            text: 'Concentración (µg/m³)',
                                            color: '#FFFFFF'
                                        },
                                        ticks: {
                                            color: '#FFFFFF'
                                        }
                                    }
                                },
                                plugins: {
                                    legend: {
                                        labels: {
                                            color: '#FFFFFF'
                                        }
                                    },
                                    zoom: {
                                        pan: {
                                            enabled: true,
                                            mode: 'x',
                                            speed: 20
                                        },
                                        zoom: {
                                            wheel: {
                                                enabled: true
                                            },
                                            pinch: {
                                                enabled: true
                                            },
                                            mode: 'x'
                                        }
                                    }
                                }
                            }
                        });
                    }
                })
                .catch(error => {
                    console.error('Error al obtener los datos:', error);
                });
        }

        fetchAndUpdateData();

        setInterval(fetchAndUpdateData, 5000);
    </script>

</body>
</html>
